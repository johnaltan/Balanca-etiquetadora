/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package balanca.etiquetadora;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import javafx.beans.binding.Bindings;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;
import jssc.SerialPortList;

/**
 *
 * @author paola
 */
public class MainFrame extends javax.swing.JFrame implements SerialPortEventListener{

    /**
     * Creates new form MainFrame
     */
    private Etiqueta etiqueta;
    private SerialPort portaSerial;
    
    
    public MainFrame() {
        initComponents();       
        etiqueta = new Etiqueta(new File("ETIQUETA_11"));
    } 

    public SerialPort getPortaSerial() {
        return portaSerial;
    }

    public void setPortaSerial(SerialPort portaSerial) {
        this.portaSerial = portaSerial;
    }
    
    
    
    @Override
    public void serialEvent(SerialPortEvent event) {
        if(event.isRXCHAR()) {
            try {
                byte[] buf;
                buf = portaSerial.readBytes();
                if(buf != null) {
                    //System.arraycopy(buf, 0, buffer, buffer.length, buf.length);
                    System.out.println("Byte[] chegou: ");
                    for(byte b : buf) System.out.printf("0x%02X ", b);
                    System.out.println();
                    for(int i = 0; i < buf.length-1; i++) buf[i] = buf[i+1];
                    String str = new String(buf, 0, buf.length-2);
                    str = str.substring(0, 2) + "." + str.substring(2);
                    jTFPeso.setText(str);
                    geraEtiqueta();
                    mandaImprimir();
                }
            }
            catch (SerialPortException ex) {
                System.out.println(ex);
            }            
        }
        else if(event.isCTS()){//If CTS line has changed state
            if(event.getEventValue() == 1){//If line is ON
                System.out.println("CTS - ON");
            }
            else {
                System.out.println("CTS - OFF");
            }
        }
        else if(event.isDSR()){///If DSR line has changed state
            if(event.getEventValue() == 1){//If line is ON
                System.out.println("DSR - ON");
            }
            else {
                System.out.println("DSR - OFF");
            }
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFPreco = new javax.swing.JTextField();
        jTFPeso = new javax.swing.JTextField();
        jBGerar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTFCodProd = new javax.swing.JTextField();
        jLResult = new javax.swing.JLabel();
        jLValor = new javax.swing.JLabel();
        jTFValor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLDesc = new javax.swing.JLabel();
        jBImprimir = new javax.swing.JButton();
        jTFPesoEmb = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Preço por kg (R$):");

        jLabel2.setText("Peso (kg):");

        jTFPreco.setEnabled(false);
        jTFPreco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPrecoFocusLost(evt);
            }
        });
        jTFPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFPrecoKeyPressed(evt);
            }
        });

        jTFPeso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPesoFocusLost(evt);
            }
        });
        jTFPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFPesoKeyPressed(evt);
            }
        });

        jBGerar.setText("Gerar etiqueta");
        jBGerar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jBGerarFocusGained(evt);
            }
        });
        jBGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGerarActionPerformed(evt);
            }
        });

        jLabel3.setText("Cód. Produto:");

        jTFCodProd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFCodProdFocusLost(evt);
            }
        });
        jTFCodProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFCodProdKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCodProdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFCodProdKeyTyped(evt);
            }
        });

        jLResult.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLValor.setText("Valor (R$):");

        jTFValor.setEnabled(false);
        jTFValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFValorActionPerformed(evt);
            }
        });

        jLabel4.setText("Desc. Produto:");

        jLDesc.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLDesc.setText("          ");

        jBImprimir.setText("Imprimir");
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });

        jTFPesoEmb.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPesoEmbFocusLost(evt);
            }
        });
        jTFPesoEmb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFPesoEmbKeyPressed(evt);
            }
        });

        jLabel5.setText("Peso embalagem (kg):");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jBImprimir)
                                .addGap(18, 18, 18)
                                .addComponent(jBGerar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jLDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLValor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTFValor))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFPeso, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTFCodProd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFPreco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFPesoEmb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTFCodProd, jTFPeso, jTFPesoEmb, jTFPreco, jTFValor});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDesc)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFPesoEmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLValor))
                .addGap(21, 21, 21)
                .addComponent(jLResult, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBGerar)
                    .addComponent(jBImprimir))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLDesc, jTFCodProd, jTFPeso, jTFPreco, jTFValor});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFValorActionPerformed

    private void jTFCodProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCodProdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCodProdKeyTyped

    private void jTFCodProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCodProdKeyReleased
        // TODO add your handling code here:       
        
    }//GEN-LAST:event_jTFCodProdKeyReleased

    private void jTFCodProdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCodProdKeyPressed
        // TODO add your handling code here:
        trataEventoTextField(evt,jTFCodProd,jTFPeso,true); 
    }//GEN-LAST:event_jTFCodProdKeyPressed

    private void jBGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGerarActionPerformed
        // TODO add your handling code here:
        geraEtiqueta();

    }//GEN-LAST:event_jBGerarActionPerformed

    private void jTFPesoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPesoKeyPressed
        // TODO add your handling code here:
        trataEventoTextField(evt,jTFPeso,jTFPesoEmb,false);
    }//GEN-LAST:event_jTFPesoKeyPressed

    private void jTFPrecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPrecoKeyPressed
        // TODO add your handling code here:
        trataEventoTextField(evt,jTFPreco,jTFPeso,false);
    }//GEN-LAST:event_jTFPrecoKeyPressed

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
        // TODO add your handling code here:
        mandaImprimir();
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void jBGerarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jBGerarFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jBGerarFocusGained

    private void jTFCodProdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCodProdFocusLost
        // TODO add your handling code here:
        corrigeCampoNumerico(jTFCodProd, true);
        if(!jTFCodProd.getText().isEmpty()){
            LeitorCSV leitor = new LeitorCSV("produtos.csv", ";");
            try{
                System.out.println(Integer.parseInt(jTFCodProd.getText()));
                Produto produto = leitor.buscaProduto(jTFCodProd.getText());
                etiqueta.setProduto(produto);
                jLDesc.setText(produto.getDescricao());
                jTFPreco.setText(String.valueOf(produto.getPrec()));
            }catch (Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jTFCodProdFocusLost

    private void jTFPrecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPrecoFocusLost
        // TODO add your handling code here:
        corrigeCampoNumerico(jTFPreco,false);
    }//GEN-LAST:event_jTFPrecoFocusLost

    private void jTFPesoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPesoFocusLost
        // TODO add your handling code here:
        corrigeCampoNumerico(jTFPeso,false);
    }//GEN-LAST:event_jTFPesoFocusLost

    private void jTFPesoEmbFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPesoEmbFocusLost
        // TODO add your handling code here:
        corrigeCampoNumerico(jTFPesoEmb,false);
    }//GEN-LAST:event_jTFPesoEmbFocusLost

    private void jTFPesoEmbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPesoEmbKeyPressed
        // TODO add your handling code here:
        trataEventoTextField(evt,jTFPesoEmb,jBGerar,false);
    }//GEN-LAST:event_jTFPesoEmbKeyPressed

    private void geraEtiqueta() {
        double peso = 0, pesoEmb;
        jLResult.setForeground(Color.black);
        try{
            peso = Double.valueOf(jTFPeso.getText());
            pesoEmb = Double.valueOf(jTFPesoEmb.getText());
            etiqueta.setPesoEmb(pesoEmb);
            etiqueta.setPeso(peso);
            etiqueta.calculaParametros();
            jTFValor.setText(String.format("%.2f",etiqueta.getValorFinal()).replace(',', '.'));            
            jLResult.setText(etiqueta.getCodigoBarras(true));
        }catch(Exception e){
            jLResult.setForeground(Color.red);
            jLResult.setText("ERRO: " + e.getMessage());

        }
    }
    private void mandaImprimir() {
        DriverImpressora driver = new DriverImpressora();
        String str = driver.editaLayout(etiqueta);
        driver.escreveArquivo(str,new File("saida"));
        
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
        
        driver.imprime(str,printServices[0]);
    }
    private void trataEventoTextField(java.awt.event.KeyEvent evt, 
            JTextField campoAtual,
            javax.swing.JComponent componentProx, 
            boolean inteiro){
        int evtcod = evt.getKeyCode();
        if(evtcod == KeyEvent.VK_ENTER) {
            corrigeCampoNumerico(campoAtual,inteiro);
            componentProx.grabFocus();
        }
    }
    
    private void corrigeCampoNumerico(JTextField campo,boolean inteiro){
        String txt = campo.getText();
        txt = txt.replace(',','.');
        txt = txt.replaceAll("[^0-9.]+", "");
        if(inteiro) txt = txt.replace(".","");
        campo.setText(txt);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        MainFrame telaPrincipal = new MainFrame();
        
        
        
        try {
            
            PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
            System.out.println("Numero de processos de impressao: " + printServices.length);
        
       
            for (PrintService printer : printServices)
                System.out.println("Impressora: " + printer.getName());
            
            String[] portNames = SerialPortList.getPortNames();
            System.out.println("Portas: ");
            for(String s : portNames) System.out.println(s);
            SerialPort serialPort = new SerialPort("COM1");
            serialPort.openPort();
            serialPort.setParams(SerialPort.BAUDRATE_9600, 
                    SerialPort.DATABITS_8, 
                    SerialPort.STOPBITS_2, 
                    SerialPort.PARITY_NONE);
            
            int mask = SerialPort.MASK_RXCHAR + SerialPort.MASK_CTS + SerialPort.MASK_DSR;//Prepare mask
            serialPort.setEventsMask(mask);//Set mask
            telaPrincipal.setPortaSerial(serialPort);
            serialPort.addEventListener(telaPrincipal);//Add SerialPortEventListener
                        
        }catch(SerialPortException e){
            e.printStackTrace();
        }
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                telaPrincipal.setLocation(dim.width/2-telaPrincipal.getSize().width/2, dim.height/2-telaPrincipal.getSize().height/2);
                telaPrincipal.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGerar;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JLabel jLDesc;
    private javax.swing.JLabel jLResult;
    private javax.swing.JLabel jLValor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTFCodProd;
    private javax.swing.JTextField jTFPeso;
    private javax.swing.JTextField jTFPesoEmb;
    private javax.swing.JTextField jTFPreco;
    private javax.swing.JTextField jTFValor;
    // End of variables declaration//GEN-END:variables
}
